#include<stdio.h>
#include<string.h>
#include<stdlib.h>

int isOperator(char c)
{
	if(c=='+'||c=='-'||c=='*'||c=='/')	return 1;
	else return 0;
}

void moveOperator(char *p)
{
	while(*p!='\0')
	{
		*p=*(p+1);
		p++;
	}
}


void moveOperand(float *p,float *end)
{
	while(p!=end)
	{
		*p=*(p+1);
		p++;
	}
}

int main()
{
	char str[]="1-2.5*4+10.2/5.1";
    char operators[100]={'\0'};
	float operands[100];

	int operatorsIndex=0;
	for(int i=0;i<strlen(str);i++)
	{
		if(isOperator(str[i]))
		{
			operators[operatorsIndex]=str[i];
			operatorsIndex++;
		}
	}

	int opertorsIndex=0;
    for(int i=0;i<strlen(str);i++)
	{
		char temp[100]={'\0'};
		int tempIndex=0;
		while(!isOperator(str[i]))
		{
			temp[tempIndex]=str[i];
			i++;
			tempIndex++;
		}

	float floatV=atof(temp);
	operands[opertorsIndex++]=floatV;
	}
	char *poperator=operators;
	float *poperand=operands;
	while(*poperator!='\0')
	{
		if(*poperator=='*')
		{
			float leftoperand=*poperand;
			float rightoperand=*(poperand+1);
			float res=leftoperand*rightoperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandIndex--]);
		}
		else if(*poperator=='/')
		{
            float leftoperand=*poperand;
			float rightoperand=*(poperand+1);
			float res=leftoperand/rightoperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandIndex--]);
		}
		else
		{
         poperator++;
		 poperand++;
		}
	}


    poperator=operators;
	poperand=operands;
	while(*poperator!='\0')
	{
		if(*poperator=='+')
		{
			float leftoperand=*poperand;
			float rightoperand=*(poperand+1);
			float res=leftoperand+rightoperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandIndex--]);
		}
		else if(*poperator=='-')
		{
            float leftoperand=*poperand;
			float rightoperand=*(poperand+1);
			float res=leftoperand-rightoperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandIndex--]);
		}
	}
	printf("the result is %0.2f\n",operands[0]);


	return 0;
}
